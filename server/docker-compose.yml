version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - '--api.insecure=true'
      - '--providers.docker'
      - '--providers.docker.exposedByDefault=false'
    ports:
      # The HTTP port
      - '80:80'
      # The Web UI (enabled by --api.insecure=true)
      - '8080:8080'
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  main:
    container_name: main
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229
    command: npm run start:dev
    env_file:
      - .env
    # networks:
    #   - webnet
    depends_on:
      - redis
      - postgres
  redis:
    image: 'redis:alpine'
    command: ['redis-server', '--bind', 'redis', '--port', '6379']
    ports:
      - '6379:6379'
    volumes:
      - 'redisdata:/data'
    # networks:
    #   - webnet
  postgres:
    container_name: postgres
    image: postgres:12
    # networks:
    #   - webnet
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
# networks:
#   webnet:
volumes:
  pgdata:
  redisdata:
